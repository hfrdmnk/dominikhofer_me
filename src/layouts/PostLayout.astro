---
import readingTime from 'reading-time';
import { formatDistanceToNow } from 'date-fns';
import HeaderContainer from '../components/HeaderContainer.astro';
import HeaderTitle from '../components/HeaderTitle.astro';
import MainContainer from '../components/MainContainer.astro';
import SectionMarginTitle from '../components/SectionMarginTitle.astro';
import SimpleTag from '../components/SimpleTag.astro';
import BaseLayout from './BaseLayout.astro';
import { Icon } from 'astro-icon/components';

const { title, type, date, lastUpdated, tags } = Astro.props;

const content = await Astro.slots.render('default');
---

<BaseLayout>
	<header slot="header" class="main-grid -mb-12">
		<HeaderContainer>
			<HeaderTitle>
				<h1>{title}</h1>
				<div class="flex flex-wrap items-center gap-2 mt-2 select-none">
					{type === 'note' && <SimpleTag icon="notepad">Note</SimpleTag>}
					{type === 'post' && <SimpleTag icon="article">Post</SimpleTag>}
					{type === 'essay' && <SimpleTag icon="books">NoEssayte</SimpleTag>}
					{
						tags.length > 0 && (
							<>
								<span>&#8901;</span>
								{tags.map((tag: string) => (
									<SimpleTag icon="tag">{tag}</SimpleTag>
								))}
							</>
						)
					}
					<span>&#8901;</span>
					<SimpleTag icon="calendar-dots"
						>{formatDistanceToNow(new Date(date))} ago</SimpleTag
					>
					{
						lastUpdated && (
							<SimpleTag icon="clock-clockwise">
								Last updated:
								{formatDistanceToNow(new Date(date))} ago
							</SimpleTag>
						)
					}
					<span>&#8901;</span>
					<span class="font-mono text-sm text-gray-500"
						>{readingTime(content).text}</span
					>
				</div>
			</HeaderTitle>
		</HeaderContainer>
	</header>
	<MainContainer>
		<SectionMarginTitle>
			<a
				href="/posts"
				class="flex items-center gap-2 no-highlight no-underline text-gray-500"
				slot="aside">
				<Icon name="ph:arrow-bend-up-left" class="w-5 h-5" />
				<span>Back to all posts</span>
			</a>
			<slot />
		</SectionMarginTitle>
	</MainContainer>
</BaseLayout>
