---
// opt out of prerendering
export const prerender = false;

import { getCollection } from 'astro:content';

import BaseLayout from '../layouts/BaseLayout.astro';
import SectionMarginTitle from '../components/SectionMarginTitle.astro';
import Milestone from '../components/Milestone.astro';
import HeaderTitle from '../components/HeaderTitle.astro';
import HeaderContainer from '../components/HeaderContainer.astro';
import MainContainer from '../components/MainContainer.astro';
import SimpleTag from '../components/SimpleTag.astro';
import SimpleLinkButton from '../components/SimpleLinkButton.astro';

const type = Astro.url.searchParams.get('t') || '';

let milestones = await getCollection('milestones');
type Milestones = (typeof milestones)[number][];

if (type === 'cv' || type === 'personal' || type === 'project') {
	milestones = milestones.filter((milestone) => milestone.data.type === type);
}

const groupedMilestones = groupMilestonesByYear(milestones);

function groupMilestonesByYear(milestones: Milestones): [number, Milestones][] {
	const years: { [key: number]: Milestones } = {};

	milestones.forEach((milestone) => {
		const year = new Date(milestone.data.date).getFullYear();

		if (!years[year]) {
			years[year] = [] as Milestones;
		}

		years[year].push(milestone);
	});

	Object.keys(years).forEach((year) => {
		years[Number(year)].sort(
			(a, b) =>
				new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
		);
	});

	// Convert the years object to an array of [year, milestones] tuples
	const sortedYears: [number, Milestones][] = Object.entries(years).map(
		([year, milestones]) => [Number(year), milestones]
	);

	// Sort the years in descending order (newest to oldest)
	sortedYears.sort((a, b) => b[0] - a[0]);

	return sortedYears;
}
---

<BaseLayout>
	<header slot="header" class="main-grid">
		<HeaderContainer>
			<HeaderTitle>
				<h1>What's up?</h1>
				<SimpleTag icon="calendar-dots">Last updated: 29.05.24</SimpleTag>
			</HeaderTitle>
			<div class="flex flex-col gap-4">
				<p class="font-medium text-pretty">
					(This is a <a href="https://nownownow.com/" target="_blank"
						>now page</a
					>, and if you have your own site, <a
						href="https://nownownow.com/about"
						target="_blank">you should make one</a
					>, too.)
				</p>
			</div>
		</HeaderContainer>
	</header>
	<MainContainer>
		<SectionMarginTitle title="Right now">
			<div class="flex flex-col gap-2">
				<h2 class="h3">Location</h2>
				<p>Bern, Switzerland</p>
			</div>
			<div class="flex flex-col gap-2">
				<h2 class="h3">What I'm up to</h2>
				<div class="prose">
					<ul>
						<li>
							Launching this website &ndash; if you can read this, I achieved it
							:)
						</li>
						<li>
							Training for my next 10k race (Lausanne, in October 2024). Will do
							a few races in between as well.
						</li>
						<li>
							Learning <a href="https://laravel.com" target="_blank">Laravel</a>
							(once again, but this time for real &ndash; I hope).
						</li>
						<!-- <li>
							Working on a tool, that automates quality assurance on your
							website: <a href="https://inspectthis.site" target="_blank"
								>inspecthis.site</a
							>
						</li> -->
						<!-- <li>
							Planning a SaaS and some Framer plugins with <a
								href="https://cedric.design"
								target="_blank">CÃ©dric</a
							>.
						</li> -->
						<li>
							Working as the Lead Webflow Developer @<a
								href="https://bloqlabs.ch"
								target="_blank">Bloq Labs</a
							>.
						</li>
					</ul>
				</div>
			</div>
		</SectionMarginTitle>
		<SectionMarginTitle id="timeline">
			<div
				class="flex flex-wrap sm:flex-nowrap sm:justify-normal items-center gap-2 font-mono">
				<SimpleLinkButton
					href="/now#timeline"
					icon="diamonds-four"
					isActive={!type}>
					All
				</SimpleLinkButton>
				<SimpleLinkButton
					href="/now?t=personal#timeline"
					icon="heart"
					isActive={type === 'personal'}>
					Personal
				</SimpleLinkButton>
				<SimpleLinkButton
					href="/now?t=cv#timeline"
					icon="read-cv-logo"
					isActive={type === 'cv'}>
					CV
				</SimpleLinkButton>
				<SimpleLinkButton
					href="/now?t=project#timeline"
					icon="laptop"
					isActive={type === 'project'}>
					Project
				</SimpleLinkButton>
				<div class="h-[1px] bg-gray-200 flex-1"></div>
			</div>
		</SectionMarginTitle>
		{
			groupedMilestones.map(([year, milestones]) => (
				<>
					<SectionMarginTitle title={year.toString()}>
						{milestones.map((milestone) => (
							<Milestone
								milestone={milestone}
								showImage={milestone.data.featured ? true : false}
							/>
						))}
					</SectionMarginTitle>
				</>
			))
		}
	</MainContainer>
</BaseLayout>
