---
import { Icon } from 'astro-icon/components';
import { Picture } from 'astro:assets';
import { format } from 'date-fns';
import SimpleTag from './SimpleTag.astro';

const { milestone, showImage } = Astro.props;

let formattedEndDate = '';

if (milestone.data.dateEnd) {
	formattedEndDate = format(new Date(milestone.data.dateEnd), 'MMMM yyyy');
}

let icon;

switch (milestone.data.type) {
	case 'personal':
		icon = 'heart';
		break;
	case 'cv':
		icon = 'read-cv-logo';
		break;
	case 'project':
		icon = 'laptop';
		break;
	default:
		icon = 'notepad';
}

if (milestone.data.isFeatured) {
	icon = 'star-duotone';
}
---

<article class="flex flex-col gap-8 border rounded-lg">
	{
		showImage && milestone.data.visual && (
			<Picture
				src={milestone.data.visual}
				alt="Visual"
				class="block rounded-md"
			/>
		)
	}
	<div class="relative flex flex-col items-start gap-2 p-6 px-4 sm:px-6">
		{
			milestone.data.link && (
				<a
					href={milestone.data.link}
					target="_blank"
					class="absolute top-6 right-6 select-none text-gray-500 hover:text-gray-800">
					<Icon name="ph:link" class="w-5 h-5" />
				</a>
			)
		}
		<div class="flex flex-col gap-1">
			<div class="flex sm:flex-row sm:items-baseline xl:pt-1">
				<Icon
					name=`ph:${icon}`
					class:list={[
						'w-5 h-5 text-gray-500 flex-shrink-0 sm:self-center mr-2',
						{ 'text-yellow-500': milestone.data.isFeatured },
					]}
				/>
				<h3 class="h5">{milestone.data.title}</h3>
			</div>
			<p>{milestone.data.shortDescription}</p>
		</div>
		<div class="flex flex-wrap items-center gap-2 mt-2 select-none">
			{
				milestone.data.company && (
					<SimpleTag icon="at">{milestone.data.company}</SimpleTag>
				)
			}
			{
				milestone.data.company && milestone.data.tags.length > 0 && (
					<span class="text-gray-500">&#183;</span>
				)
			}
			{
				milestone.data.tags.length > 0 && (
					<>
						{milestone.data.tags.map((tag: string) => (
							<SimpleTag icon="tag">{tag}</SimpleTag>
						))}
					</>
				)
			}
			{
				milestone.data.dateEnd && milestone.data.tags.length > 0 && (
					<span class="text-gray-500">&#183;</span>
				)
			}
			{
				milestone.data.dateEnd && (
					<>
						<SimpleTag icon="calendar-dots">until {formattedEndDate}</SimpleTag>
					</>
				)
			}
		</div>
	</div>
</article>
